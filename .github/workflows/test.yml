name: CI - Tests & Code Quality

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

defaults:
  run:
    working-directory: logistics-ddd-platform

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run ESLint
        run: bun run lint

      - name: Check Prettier formatting
        run: bun run format:check

      - name: Type check
        run: bun run type-check || echo "Skipping type-check (script not found)"
        continue-on-error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build || echo "Skipping build (script not found)"

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: logistics_test
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U app -d logistics_test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      DB_TYPE: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USERNAME: app
      DB_PASSWORD: app
      DB_NAME: logistics_test
      DB_LOGGING: "false"
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U app -d logistics_test; do 
            echo "Waiting for postgres..."
            sleep 1
          done
          echo "Postgres is ready!"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run database migrations
        run: bun run migrate || echo "Skipping migrations (script not found)"
        continue-on-error: true

      - name: Run tests with coverage
        run: bun test --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          working-directory: logistics-ddd-platform
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: logistics-ddd-platform/coverage/
          retention-days: 30
